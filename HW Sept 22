Increasing the difference between means, that is the effect size, does not alter the overall likelihood of a type I error using the bonferroni correction, but it does make it easier to reject the null for individual tests. This is because bonferroni controls for the familywise error rate (FWER).

Increasing the difference between means does alter the likelihood of a type I error after benjamini hochberg correction though. This is because BH controls for the false discovery rate (FDR) rather than the FWER. Raising the effect size actually even makes BH more stringent because the p-values will get smaller as they are more significant and small values are even less likely to be significant after the BH adjustment.

Run the below code to see the graphs of probabilty of type I error against number of t-tests, I'm not sure how to upload graphs into github. 

This matlab code was written by ChatGPT on 9/19/23: 
https://chat.openai.com/share/e717b969-ed21-43c8-8a43-e80e2d1b881a

% Parameters
num_tests = 100;          % Number of t-tests
sample_size = 30;         % Sample size for each group
pop_mean1 = 1;            % Mean for population 1
pop_mean2 = 20;            % Mean for population 2
pop_std = 1;              % Standard deviation for both populations
alpha = 0.05;             % Significance level

% Initialize arrays to store results
p_values = zeros(num_tests, 1);
bonferroni_corrected_p = zeros(num_tests, 1);
bh_corrected_p = zeros(num_tests, 1);

% Simulate two populations with unequal means and run t-tests
for i = 1:num_tests
    % Generate random samples from two populations
    sample1 = normrnd(pop_mean1, pop_std, sample_size, 1);
    sample2 = normrnd(pop_mean2, pop_std, sample_size, 1);
    
    % Perform a two-sample t-test
    [~, p, ~] = ttest2(sample1, sample2, 'Alpha', alpha);
    
    % Store the p-value
    p_values(i) = p;
end

% Plot Type 1 error vs. number of t-tests done (uncorrected)
figure;
plot(1:num_tests, cumsum(p_values < alpha) ./ (1:num_tests), '-o');
xlabel('Number of t-tests');
ylabel('Probability of Type 1 Error');
title('Uncorrected Type 1 Error');
legend('Uncorrected');

% Bonferroni correction
bonferroni_alpha = alpha / num_tests;  % Bonferroni-adjusted alpha
bonferroni_corrected_p = p_values < bonferroni_alpha;

% Plot Type 1 error vs. number of t-tests done (Bonferroni corrected)
figure;
plot(1:num_tests, cumsum(bonferroni_corrected_p) ./ (1:num_tests), '-o');
xlabel('Number of t-tests');
ylabel('Probability of Type 1 Error');
title('Bonferroni Corrected Type 1 Error');
legend('Bonferroni Corrected');

% Benjamini-Hochberg correction
[sorted_p_values, sort_idx] = sort(p_values);
bh_alpha = alpha * (1:num_tests) / num_tests;

% Correct p-values using Benjamini-Hochberg procedure
for i = 1:num_tests
    if sorted_p_values(i) <= bh_alpha(i)
        bh_corrected_p(sort_idx(i)) = 1;
    else
        break;  % Stop when the condition is no longer met
    end
end

% Plot Type 1 error vs. number of t-tests done (Benjamini-Hochberg corrected)
figure;
plot(1:num_tests, cumsum(bh_corrected_p) ./ (1:num_tests), '-o');
xlabel('Number of t-tests');
ylabel('Probability of Type 1 Error');
title('Benjamini-Hochberg Corrected Type 1 Error');
legend('Benjamini-Hochberg Corrected');

