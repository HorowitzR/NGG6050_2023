
1&2&4. Run the code to get all the plots.

3. p-value for b = 0 hypothesis test: 0.0000
The null hypothesis that b = 0 can be rejected.

5. Coefficient of Determination (R-squared): 0.9634

6. Pearson's correlation coefficient (r): 0.9815

7. After adding random noise (2*randn(size(wing_length))) the numbers changed as below. 
Noisy Data - Coefficient of Determination (R-squared): 0.4266
Noisy Data - Pearson's correlation coefficient (r): 0.6531
Noisy Data - p-value for b = 0 hypothesis test: 0.0000
For the noisy data, the null hypothesis that b = 0 can be rejected.
If I had increased the noise more, eventually the null hypothesis would not be rejected (could be done by increasing the multiplier in the %add noise to the data section) because the correlation would be nonexistent/too weak and a linear regression would not fit the data. 


The graphs can be seen by running this matlab code generated by ChatGPT on Sept 28 2023 in this conversation:
https://chat.openai.com/share/dcc99397-1398-429c-9da1-4d44ef38d2f4

%%Original Data
% Define the paired data
age = [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17];
wing_length = [1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0];

% Perform linear regression
[p, S] = polyfit(age, wing_length, 1);
y_fit = polyval(p, age);

% Calculate the confidence intervals
ci = polyconf(p, age, S, 'alpha', 0.05);

% Calculate the coefficient of determination (R-squared)
y_mean = mean(wing_length);
SSR = sum((y_fit - y_mean).^2);
SST = sum((wing_length - y_mean).^2);
R_squared = SSR / SST;

% Calculate Pearson's correlation coefficient (Pearson's r)
[r, ~] = corr(age', wing_length');

% Plot the data with confidence intervals
figure;
scatter(age, wing_length, 'b', 'filled');
hold on;
plot(age, y_fit, 'r', 'LineWidth', 2);
plot(age, ci(:, 1), 'g--', 'LineWidth', 1);
plot(age, ci(:, 2), 'g--', 'LineWidth', 1);
legend('Data', 'Regression Line', '95% Confidence Intervals', 'Location', 'Northwest');
xlabel('Age');
ylabel('Wing Length');
title('Relationship between Age and Wing Length');

% Display R-squared and Pearson's r
fprintf('Coefficient of Determination (R-squared): %.4f\n', R_squared);
fprintf('Pearson''s correlation coefficient (r): %.4f\n', r);

% Test the null hypothesis that b = 0 (slope is zero)
t_stat = p(1) / S.R(2);
p_value = 2 * (1 - tcdf(abs(t_stat), S.df));
fprintf('p-value for b = 0 hypothesis test: %.4f\n', p_value);

% Check if the null hypothesis can be rejected
alpha = 0.05;
if p_value < alpha
    fprintf('The null hypothesis that b = 0 can be rejected.\n');
else
    fprintf('The null hypothesis that b = 0 cannot be rejected.\n');
end

%%Noisy Data
% Define the paired data
age = [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17];
wing_length = [1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0];

% Add noise to the data
rng(123); % Set a seed for reproducibility
noise = 2 * randn(size(wing_length)); % Adjust noise level as needed
wing_length_noisy = wing_length + noise;

% Perform linear regression on the noisy data
[p, S] = polyfit(age, wing_length_noisy, 1);
y_fit = polyval(p, age);

% Calculate the confidence intervals for the noisy data
ci = polyconf(p, age, S, 'alpha', 0.05);

% Calculate the coefficient of determination (R-squared) for the noisy data
y_mean = mean(wing_length_noisy);
SSR = sum((y_fit - y_mean).^2);
SST = sum((wing_length_noisy - y_mean).^2);
R_squared = SSR / SST;

% Calculate Pearson's correlation coefficient (Pearson's r) for the noisy data
[r, ~] = corr(age', wing_length_noisy');

% Plot the noisy data with confidence intervals
figure;
scatter(age, wing_length_noisy, 'b', 'filled');
hold on;
plot(age, y_fit, 'r', 'LineWidth', 2);
plot(age, ci(:, 1), 'g--', 'LineWidth', 1);
plot(age, ci(:, 2), 'g--', 'LineWidth', 1);
legend('Noisy Data', 'Regression Line', '95% Confidence Intervals', 'Location', 'Northwest');
xlabel('Age');
ylabel('Noisy Wing Length');
title('Relationship between Age and Noisy Wing Length');

% Display R-squared and Pearson's r for the noisy data
fprintf('Noisy Data - Coefficient of Determination (R-squared): %.4f\n', R_squared);
fprintf('Noisy Data - Pearson''s correlation coefficient (r): %.4f\n', r);

% Test the null hypothesis that b = 0 (slope is zero) for the noisy data
t_stat = p(1) / S.R(2);
p_value = 2 * (1 - tcdf(abs(t_stat), S.df));
fprintf('Noisy Data - p-value for b = 0 hypothesis test: %.4f\n', p_value);

% Check if the null hypothesis can be rejected for the noisy data
alpha = 0.05;
if p_value < alpha
    fprintf('For the noisy data, the null hypothesis that b = 0 can be rejected.\n');
else
    fprintf('For the noisy data, the null hypothesis that b = 0 cannot be rejected.\n');
end

